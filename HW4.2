import numpy as np

def rotation_matrix_from_axis_angle(axis, theta):
    # Normalize the axis
    axis = axis / np.linalg.norm(axis)
    x, y, z = axis

    # Calculate sine and cosine of theta
    cos_theta = np.cos(theta)
    sin_theta = np.sin(theta)

    # Create the skew-symmetric matrix
    skew_symmetric = np.array([
        [0, -z, y],
        [z, 0, -x],
        [-y, x, 0]
    ])

    # Calculate the rotation matrix using Rodrigues' formula
    R = np.eye(3) + sin_theta * skew_symmetric + (1 - cos_theta) * np.dot(skew_symmetric, skew_symmetric)

    return R

# Given rotation vector (1, 2, 0)
omega = np.array([1, 2, 0])

# Calculate the magnitude (theta)
theta = np.linalg.norm(omega)

# Get the rotation matrix
R = rotation_matrix_from_axis_angle(omega, theta)

print("Rotation Matrix R:")
print(R)
